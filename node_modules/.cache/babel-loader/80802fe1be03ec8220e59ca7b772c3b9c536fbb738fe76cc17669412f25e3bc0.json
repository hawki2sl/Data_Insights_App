{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\books\\\\Desktop\\\\FunProject\\\\src\\\\Routes\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uploadStart, uploadSuccess, uploadError } from \"../Features/FileUpload/FileUploadSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const uploadStatus = useSelector(state => state.fileUpload.uploadStatus);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      dispatch(uploadStart());\n      try {\n        // Upload the file (e.g., to AWS or a backend service)\n        // Simulate success:\n        dispatch(uploadSuccess(file));\n      } catch (error) {\n        dispatch(uploadError(\"File upload failed\"));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cla,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), uploadStatus === \"loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 38\n    }, this), uploadStatus === \"error\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error uploading file.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadComponent, \"I6P3T7vaBA1c0qHjuacvBPBCQ4k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FileUploadComponent;\nexport default FileUploadComponent;\nvar _c;\n$RefreshReg$(_c, \"FileUploadComponent\");","map":{"version":3,"names":["useDispatch","useSelector","uploadStart","uploadSuccess","uploadError","jsxDEV","_jsxDEV","FileUploadComponent","_s","dispatch","uploadStatus","state","fileUpload","handleFileUpload","event","_event$target$files","file","target","files","error","className","cla","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/books/Desktop/FunProject/src/Routes/FileUpload.tsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  uploadStart,\r\n  uploadSuccess,\r\n  uploadError,\r\n} from \"../Features/FileUpload/FileUploadSlice\";\r\nimport { RootState } from \"../Store/Store\";\r\n\r\nconst FileUploadComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const uploadStatus = useSelector(\r\n    (state: RootState) => state.fileUpload.uploadStatus\r\n  );\r\n\r\n  const handleFileUpload = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      dispatch(uploadStart());\r\n      try {\r\n        // Upload the file (e.g., to AWS or a backend service)\r\n        // Simulate success:\r\n        dispatch(uploadSuccess(file));\r\n      } catch (error) {\r\n        dispatch(uploadError(\"File upload failed\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cla}>\r\n      <input type=\"file\" onChange={handleFileUpload} />\r\n      {uploadStatus === \"loading\" && <p>Uploading...</p>}\r\n      {uploadStatus === \"error\" && <p>Error uploading file.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadComponent;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,WAAW,EACXC,aAAa,EACbC,WAAW,QACN,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,YAAY,GAAGT,WAAW,CAC7BU,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACF,YACzC,CAAC;EAED,MAAMG,gBAAgB,GAAG,MACvBC,KAA0C,IACvC;IAAA,IAAAC,mBAAA;IACH,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAIC,IAAI,EAAE;MACRP,QAAQ,CAACP,WAAW,CAAC,CAAC,CAAC;MACvB,IAAI;QACF;QACA;QACAO,QAAQ,CAACN,aAAa,CAACa,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdV,QAAQ,CAACL,WAAW,CAAC,oBAAoB,CAAC,CAAC;MAC7C;IACF;EACF,CAAC;EAED,oBACEE,OAAA;IAAKc,SAAS,EAAEC,GAAI;IAAAC,QAAA,gBAClBhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEX;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDlB,YAAY,KAAK,SAAS,iBAAIJ,OAAA;MAAAgB,QAAA,EAAG;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjDlB,YAAY,KAAK,OAAO,iBAAIJ,OAAA;MAAAgB,QAAA,EAAG;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7BID,mBAAmB;EAAA,QACNP,WAAW,EACPC,WAAW;AAAA;AAAA4B,EAAA,GAF5BtB,mBAAmB;AA+BzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}