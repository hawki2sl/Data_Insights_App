{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\books\\\\Desktop\\\\FunProject\\\\src\\\\Routes\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport classes from \"./FileUpload.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n\n  // Explicitly add type annotation for acceptedFiles\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) {\n      setFile(acceptedFiles[0]);\n      setStatus(\"uploading\");\n      // Simulate upload delay\n      setTimeout(() => setStatus(\"success\"), 2000);\n    }\n  }, []);\n\n  // Correct the accept prop by providing an object with MIME type and extension\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      \"text/csv\": [\".csv\"]\n    } // MIME type 'text/csv' for CSV files\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: classes.file_upload_container,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload CSV File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected File: \", file.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this), status === \"uploading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"zK5tsvTthAWLfJ6kf+RlWQmDEWk=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["useState","useCallback","useDropzone","classes","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","status","setStatus","onDrop","acceptedFiles","length","setTimeout","getRootProps","getInputProps","accept","children","className","file_upload_container","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/books/Desktop/FunProject/src/Routes/FileUpload.tsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport classes from \"./FileUpload.module.css\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [status, setStatus] = useState<\r\n    \"idle\" | \"uploading\" | \"success\" | \"failed\"\r\n  >(\"idle\");\r\n\r\n  // Explicitly add type annotation for acceptedFiles\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    if (acceptedFiles.length) {\r\n      setFile(acceptedFiles[0]);\r\n      setStatus(\"uploading\");\r\n      // Simulate upload delay\r\n      setTimeout(() => setStatus(\"success\"), 2000);\r\n    }\r\n  }, []);\r\n\r\n  // Correct the accept prop by providing an object with MIME type and extension\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: { \"text/csv\": [\".csv\"] }, // MIME type 'text/csv' for CSV files\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps()} className={classes.file_upload_container}>\r\n        <input {...getInputProps()} />\r\n        <p>Upload CSV File</p>\r\n      </div>\r\n      {file && <p>Selected File: {file.name}</p>}\r\n      {status === \"uploading\" && <p>Uploading...</p>}\r\n      {status === \"success\" && <p>Upload Successful!</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAElC,MAAM,CAAC;;EAET;EACA,MAAMY,MAAM,GAAGX,WAAW,CAAEY,aAAqB,IAAK;IACpD,IAAIA,aAAa,CAACC,MAAM,EAAE;MACxBL,OAAO,CAACI,aAAa,CAAC,CAAC,CAAC,CAAC;MACzBF,SAAS,CAAC,WAAW,CAAC;MACtB;MACAI,UAAU,CAAC,MAAMJ,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC;IAC9C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM;IAAEK,YAAY;IAAEC;EAAc,CAAC,GAAGf,WAAW,CAAC;IAClDU,MAAM;IACNM,MAAM,EAAE;MAAE,UAAU,EAAE,CAAC,MAAM;IAAE,CAAC,CAAE;EACpC,CAAC,CAAC;EAEF,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAA,GAASW,YAAY,CAAC,CAAC;MAAEI,SAAS,EAAEjB,OAAO,CAACkB,qBAAsB;MAAAF,QAAA,gBAChEd,OAAA;QAAA,GAAWY,aAAa,CAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BpB,OAAA;QAAAc,QAAA,EAAG;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EACLjB,IAAI,iBAAIH,OAAA;MAAAc,QAAA,GAAG,iBAAe,EAACX,IAAI,CAACkB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCf,MAAM,KAAK,WAAW,iBAAIL,OAAA;MAAAc,QAAA,EAAG;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7Cf,MAAM,KAAK,SAAS,iBAAIL,OAAA;MAAAc,QAAA,EAAG;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,UAAU;EAAA,QAiB0BJ,WAAW;AAAA;AAAAyB,EAAA,GAjB/CrB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}