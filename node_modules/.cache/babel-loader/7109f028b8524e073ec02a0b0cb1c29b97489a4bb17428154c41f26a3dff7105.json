{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  data: null,\n  processingStatus: 'idle',\n  error: null\n};\nconst dataProcessingSlice = createSlice({\n  name: 'dataProcessing',\n  initialState,\n  reducers: {\n    processingStart(state) {\n      state.processingStatus = 'processing';\n      state.error = null;\n    },\n    processingSuccess(state, action) {\n      state.data = action.payload;\n      state.processingStatus = 'success';\n    },\n    processingError(state, action) {\n      state.error = action.payload;\n      state.processingStatus = 'error';\n    }\n  }\n});\nexport const {\n  processingStart,\n  processingSuccess,\n  processingError\n} = dataProcessingSlice.actions;\nexport default dataProcessingSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","data","processingStatus","error","dataProcessingSlice","name","reducers","processingStart","state","processingSuccess","action","payload","processingError","actions","reducer"],"sources":["C:/Users/books/Desktop/FunProject/src/Features/DataProcessing/DataProcessingSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface DataProcessingState {\r\n  data: any[] | null; // Assuming the parsed data is in an array format\r\n  processingStatus: 'idle' | 'processing' | 'success' | 'error';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: DataProcessingState = {\r\n  data: null,\r\n  processingStatus: 'idle',\r\n  error: null,\r\n};\r\n\r\nconst dataProcessingSlice = createSlice({\r\n  name: 'dataProcessing',\r\n  initialState,\r\n  reducers: {\r\n    processingStart(state) {\r\n      state.processingStatus = 'processing';\r\n      state.error = null;\r\n    },\r\n    processingSuccess(state, action: PayloadAction<any[]>) {\r\n      state.data = action.payload;\r\n      state.processingStatus = 'success';\r\n    },\r\n    processingError(state, action: PayloadAction<string>) {\r\n      state.error = action.payload;\r\n      state.processingStatus = 'error';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { processingStart, processingSuccess, processingError } = dataProcessingSlice.actions;\r\nexport default dataProcessingSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAQ7D,MAAMC,YAAiC,GAAG;EACxCC,IAAI,EAAE,IAAI;EACVC,gBAAgB,EAAE,MAAM;EACxBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,mBAAmB,GAAGL,WAAW,CAAC;EACtCM,IAAI,EAAE,gBAAgB;EACtBL,YAAY;EACZM,QAAQ,EAAE;IACRC,eAAeA,CAACC,KAAK,EAAE;MACrBA,KAAK,CAACN,gBAAgB,GAAG,YAAY;MACrCM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,iBAAiBA,CAACD,KAAK,EAAEE,MAA4B,EAAE;MACrDF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACN,gBAAgB,GAAG,SAAS;IACpC,CAAC;IACDU,eAAeA,CAACJ,KAAK,EAAEE,MAA6B,EAAE;MACpDF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACN,gBAAgB,GAAG,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,eAAe;EAAEE,iBAAiB;EAAEG;AAAgB,CAAC,GAAGR,mBAAmB,CAACS,OAAO;AAClG,eAAeT,mBAAmB,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}