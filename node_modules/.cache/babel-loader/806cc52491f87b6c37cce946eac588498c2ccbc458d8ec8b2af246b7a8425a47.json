{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\books\\\\Desktop\\\\FunProject\\\\src\\\\Routes\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport classes from \"../Styles/FileUpload.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const uploadStatus = useSelector(state => state.fileUpload.uploadStatus);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      dispatch(uploadStart());\n      try {\n        // Upload the file (e.g., to AWS or a backend service)\n        // Simulate success:\n        dispatch(uploadSuccess(file));\n      } catch (error) {\n        dispatch(uploadError(\"File upload failed\"));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.file_upload_container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadComponent, \"I6P3T7vaBA1c0qHjuacvBPBCQ4k=\", true);\n_c = FileUploadComponent;\nexport default FileUploadComponent;\nvar _c;\n$RefreshReg$(_c, \"FileUploadComponent\");","map":{"version":3,"names":["classes","jsxDEV","_jsxDEV","FileUploadComponent","_s","dispatch","useDispatch","uploadStatus","useSelector","state","fileUpload","handleFileUpload","event","_event$target$files","file","target","files","uploadStart","uploadSuccess","error","uploadError","className","file_upload_container","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/books/Desktop/FunProject/src/Routes/FileUpload.tsx"],"sourcesContent":["\r\nimport classes from \"../Styles/FileUpload.module.css\";\r\n\r\nconst FileUploadComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const uploadStatus = useSelector(\r\n    (state: RootState) => state.fileUpload.uploadStatus\r\n  );\r\n\r\n  const handleFileUpload = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      dispatch(uploadStart());\r\n      try {\r\n        // Upload the file (e.g., to AWS or a backend service)\r\n        // Simulate success:\r\n        dispatch(uploadSuccess(file));\r\n      } catch (error) {\r\n        dispatch(uploadError(\"File upload failed\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.file_upload_container}>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadComponent;\r\n"],"mappings":";;AACA,OAAOA,OAAO,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,YAAY,GAAGC,WAAW,CAC7BC,KAAgB,IAAKA,KAAK,CAACC,UAAU,CAACH,YACzC,CAAC;EAED,MAAMI,gBAAgB,GAAG,MACvBC,KAA0C,IACvC;IAAA,IAAAC,mBAAA;IACH,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAIC,IAAI,EAAE;MACRT,QAAQ,CAACY,WAAW,CAAC,CAAC,CAAC;MACvB,IAAI;QACF;QACA;QACAZ,QAAQ,CAACa,aAAa,CAACJ,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdd,QAAQ,CAACe,WAAW,CAAC,oBAAoB,CAAC,CAAC;MAC7C;IACF;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAErB,OAAO,CAACsB;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3BID,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AA6BzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}