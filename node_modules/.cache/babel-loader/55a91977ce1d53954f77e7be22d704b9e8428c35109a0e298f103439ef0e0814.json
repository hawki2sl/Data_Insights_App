{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\books\\\\Desktop\\\\FunProject\\\\src\\\\Components\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport classes from \"./FileUpload.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(acceptedFiles); // You will handle the file here later\n  }, []);\n\n  // Correctly format the accept prop as an object with MIME type or extension\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      \"text/csv\": [\".csv\"]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    className: classes.file_upload_container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag & drop a CSV file here, or click to select one\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"m2/zPeD393EJy9nRT3zys7UD7jw=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["useCallback","useDropzone","classes","jsxDEV","_jsxDEV","FileUpload","_s","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","accept","className","file_upload_container","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/books/Desktop/FunProject/src/Components/FileUpload.tsx"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport classes from \"./FileUpload.module.css\"\r\n\r\nconst FileUpload = () => {\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    console.log(acceptedFiles); // You will handle the file here later\r\n  }, []);\r\n\r\n  // Correctly format the accept prop as an object with MIME type or extension\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: { \"text/csv\": [\".csv\"] },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      className={classes.file_upload_container}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <p>Drag & drop a CSV file here, or click to select one</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,OAAO,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGP,WAAW,CAAEQ,aAAqB,IAAK;IACpDC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM;IAAEG,YAAY;IAAEC;EAAc,CAAC,GAAGX,WAAW,CAAC;IAClDM,MAAM;IACNM,MAAM,EAAE;MAAE,UAAU,EAAE,CAAC,MAAM;IAAE;EACjC,CAAC,CAAC;EAEF,oBACET,OAAA;IAAA,GACMO,YAAY,CAAC,CAAC;IAClBG,SAAS,EAAEZ,OAAO,CAACa,qBAAsB;IAAAC,QAAA,gBAEzCZ,OAAA;MAAA,GAAWQ,aAAa,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9BhB,OAAA;MAAAY,QAAA,EAAG;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACd,EAAA,CApBID,UAAU;EAAA,QAM0BJ,WAAW;AAAA;AAAAoB,EAAA,GAN/ChB,UAAU;AAsBhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}